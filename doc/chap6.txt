  
  [1X6 [33X[0;0YConstraints[133X[101X
  
  [33X[0;0YSee the Chapter [14X'BacktrackKit: Constraints'[114X of the [5XBacktrackKit[105X manual.[133X
  
  
  [1X6.1 [33X[0;0YBounds associated with a constraint or refiner[133X[101X
  
  [33X[0;0YIn  [5XGAP[105X,  permutations  are  defined  on  the  set  of all positive integers
  (although  each  permutation may move only a finite set of points, and there
  is a system-dependent maximum point that is allowed to be moved).[133X
  
  [33X[0;0Y[5XVole[105X  can  only  search within a concrete finite symmetric group. Therefore,
  when  giving  [5XVole[105X a collection of constraints that define a search problem,
  the  search  space  must  be bounded. More specifically, [5XVole[105X must be easily
  able  to  deduce  a  positive  integer [10Xk[110X such that the whole search can take
  place  within  [10XSym([1..k])[110X.  This guarantees that [5XVole[105X will terminate (given
  sufficient resources).[133X
  
  [33X[0;0YTo  help  [5XVole[105X  make  such  a  deduction,  each  constraint  and  refiner is
  associated  with  the following values: a [13Xlargest moved point[113X, and a [13Xlargest
  required point[113X.[133X
  
  [33X[0;0YAny  call  to  [2XVoleFind.Group[102X  ([14X5.2-2[114X) or [2XVoleFind.Coset[102X ([14X5.2-3[114X) requires at
  least one constraint that defines a [13Xfinite[113X largest moved point, and any call
  to  [2XVoleFind.Representative[102X  ([14X5.2-1[114X)  requires  at least one constraint that
  defines a finite largest required point or a finite largest moved point.[133X
  
  [33X[0;0Y[12XLargest moved point[112X[133X
  
  [33X[0;0YThe  largest  [13Xmoved[113X  point of a constraint is either [9Xinfinity[109X, or a positive
  integer [10Xk[110X for which it is known a priori that any permutation satisfying the
  constraint fixes all points strictly greater than [10Xk[110X.[133X
  
  [33X[0;0YFor example, the largest moved point of the constraint [10XConstraint.InGroup(G)[110X
  is [10XLargestMovedPoint(G)[110X, see [2XLargestMovedPoint[102X ([14XReference: LargestMovedPoint
  for  a  list  or  collection  of  permutations[114X).  On  the  other  hand,  any
  permutation stabilises the empty set, so there is not largest moved point of
  the  constraint [10XConstraint.Stabilise([],OnSets)[110X; therefore the value in this
  case must be [9Xinfinity[109X.[133X
  
  [33X[0;0Y[12XLargest required point[112X[133X
  
  [33X[0;0YThe largest [13Xrequired[113X point of a constraint is either [9Xinfinity[109X, or a positive
  integer  [10Xk[110X such that there exists a permutation satisfying the constraint if
  and  only  if  there  exists  a  permutation  in  [10XSym([1..k])[110X satisfying the
  constraint.[133X
  
  [33X[0;0YFor example, if [10Xset[110X is a set of positive integers, then the largest required
  point of the constraint [10XConstraint.Stabilise(set,OnSets)[110X is [10XMaximum(set)[110X.[133X
  
  [33X[0;0YThe  largest moved point of a constraint can serve as an upper bound for the
  largest required point of a constraint.[133X
  
