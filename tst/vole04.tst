# Vole, chapter 4
#
# DO NOT EDIT THIS FILE - EDIT EXAMPLES IN THE SOURCE INSTEAD!
#
# This file has been generated by AutoDoc. It contains examples extracted from
# the package documentation. Each example is preceded by a comment which gives
# the name of a GAPDoc XML file and a line range from which the example were
# taken. Note that the XML file in turn may have been generated by AutoDoc
# from some other input.
#
gap> START_TEST("vole04.tst");

# doc/_Chapter_wrapper.xml:82-89
gap> LoadPackage("vole", false);;
gap> Set(RecNames(Vole));
[ "AutomorphismGroup", "CanonicalDigraph", "CanonicalImage", 
  "CanonicalImagePerm", "CanonicalPerm", "Centraliser", "Centralizer", 
  "DigraphCanonicalLabelling", "Intersection", "IsConjugate", "Normaliser", 
  "Normalizer", "RepresentativeAction", "Stabiliser", "Stabilizer" ]

# doc/_Chapter_wrapper.xml:255-258
gap> true;
true

# doc/_Chapter_wrapper.xml:281-284
gap> true;
true

# doc/_Chapter_wrapper.xml:312-315
gap> true;
true

# doc/_Chapter_wrapper.xml:340-343
gap> true;
true

# doc/_Chapter_wrapper.xml:361-364
gap> true;
true

# doc/_Chapter_wrapper.xml:393-403
gap> # Conjugacy of permutations
gap> x := (1,2,3,4,5);; y := (1,2,3,4,6);;
gap> IsConjugate(SymmetricGroup(6), x, y);
true
gap> IsConjugate(AlternatingGroup(6), x, y);
false
gap> IsConjugate(Group([ (5,6) ]), x, y);
true
gap> # Conjugacy of groups

# doc/_Chapter_wrapper.xml:458-461
gap> true;
true

# doc/_Chapter_wrapper.xml:485-488
gap> true;
true

# doc/_Chapter_wrapper.xml:558-561
gap> true;
true

# doc/_Chapter_wrapper.xml:581-584
gap> true;
true

# doc/_Chapter_wrapper.xml:604-607
gap> true;
true

#
gap> STOP_TEST("vole04.tst", 1);
