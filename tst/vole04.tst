# Vole, chapter 4
#
# DO NOT EDIT THIS FILE - EDIT EXAMPLES IN THE SOURCE INSTEAD!
#
# This file has been generated by AutoDoc. It contains examples extracted from
# the package documentation. Each example is preceded by a comment which gives
# the name of a GAPDoc XML file and a line range from which the example were
# taken. Note that the XML file in turn may have been generated by AutoDoc
# from some other input.
#
gap> START_TEST("vole04.tst");

# doc/_Chapter_wrapper.xml:82-90
gap> LoadPackage("vole", false);;
gap> Set(RecNames(Vole));
[ "AutomorphismGroup", "CanonicalDigraph", "CanonicalImage", 
  "CanonicalImagePerm", "CanonicalPerm", "Centraliser", "Centralizer", 
  "DigraphCanonicalLabelling", "Intersection", "IsConjugate", "Normaliser", 
  "Normalizer", "RepresentativeAction", "Stabiliser", "Stabilizer", 
  "TwoClosure" ]

# doc/_Chapter_wrapper.xml:206-209
gap> true;
true

# doc/_Chapter_wrapper.xml:235-238
gap> true;
true

# doc/_Chapter_wrapper.xml:268-271
gap> true;
true

# doc/_Chapter_wrapper.xml:296-299
gap> true;
true

# doc/_Chapter_wrapper.xml:317-320
gap> true;
true

# doc/_Chapter_wrapper.xml:349-359
gap> # Conjugacy of permutations
gap> x := (1,2,3,4,5);; y := (1,2,3,4,6);;
gap> IsConjugate(SymmetricGroup(6), x, y);
true
gap> IsConjugate(AlternatingGroup(6), x, y);
false
gap> IsConjugate(Group([ (5,6) ]), x, y);
true
gap> # Conjugacy of groups

# doc/_Chapter_wrapper.xml:384-391
gap> LoadPackage("OrbitalGraphs", false);;
gap> G := Group([ (1,4)(2,5), (1,3,5)(2,4,6) ]);;
gap> (3,6) in G;
false
gap> Vole.TwoClosure(G) = ClosureGroup(G, (3,6));
true

# doc/_Chapter_wrapper.xml:451-454
gap> true;
true

# doc/_Chapter_wrapper.xml:483-486
gap> true;
true

# doc/_Chapter_wrapper.xml:556-559
gap> true;
true

# doc/_Chapter_wrapper.xml:582-585
gap> true;
true

# doc/_Chapter_wrapper.xml:608-611
gap> true;
true

#
gap> STOP_TEST("vole04.tst", 1);
